1.1
Задание №1
Напишите программу, которая создаёт список из 10 целых чисел, введённых пользователем.
Программа должна учитывать, что введёное пользователем значение может быть не числом.
Программа должна вывести на экран минимальное число, максимальное число и сумму всех чисел в списке.

def main():
    numbers = []
    
    print("Введите 10 целых чисел:")
    
    while len(numbers) < 10:
        try:
            user_input = input(f"Число {len(numbers) + 1}: ")
            number = int(user_input)
            numbers.append(number)
        except ValueError:
            print("Что-то не так, введите целое число.")
    

    min_number = min(numbers)
    max_number = max(numbers)
    total_sum = sum(numbers)


    print("\nРезультаты:")
    print(f"Список чисел: {numbers}")
    print(f"Минимальное число: {min_number}")
    print(f"Максимальное число: {max_number}")
    print(f"Сумма всех чисел: {total_sum}")

if __name__ == "__main__":
    main()





Задание №2
Напишите программу, в которой будут заданы по умолчанию названия ваших курсов за последний семестр (минимум 3 шт.).
Программа должна принимать на вход имена студентов и оценки за эти курсы. Программа должна вывести средний балл по
всем студентам, минимальные и максимальные оценки. Должна быть проверка что оценки валидны (является целочисленным значением, в диапазоне от 3 до 5 включительно).

def main():
    courses = ["Вышмат", "Философия", "Физика"]
    students = {}
    
    print("Введите имена студентов и оценки (3-5). Для выхода: 'стоп'")
    
    while True:
        name = input("Имя студента: ").strip()
        if name.lower() == 'стоп':
            break
        if not name or name in students:
            continue
            
        grades = {}
        for course in courses:
            while True:
                try:
                    grade = int(input(f"{course}: "))
                    if 3 <= grade <= 5:
                        grades[course] = grade
                        break
                except:
                    pass
        
        students[name] = grades
    
    # Сбор всех оценок
    all_grades = [grade for grades in students.values() for grade in grades.values()]
    
    if all_grades:
        print(f"\nСредний балл: {sum(all_grades)/len(all_grades):.2f}")
        print(f"Минимальная оценка: {min(all_grades)}")
        print(f"Максимальная оценка: {max(all_grades)}")

if __name__ == "__main__":
    main()


Задание №3
Напишите программу, которая принимает от пользователя строку слов, разделённых пробелами,
и сохраняет их в кортеж (tuple). Отобразите на экран количество уникальных слов в введённой строке.

def main():
    input_string = input("Введите строку слов через пробелы: ")
    
    words_tuple = tuple(input_string.split())
    
    unique_words = set(words_tuple)
    unique_count = len(unique_words)
    
    print(f"\nКортеж слов: {words_tuple}")
    print(f"Количество уникальных слов: {unique_count}")

if __name__ == "__main__":
    main()

    #input() получает строку от пользователя

    split() разделяет строку на слова по пробелам

    tuple() создает кортеж из списка слов

    set() автоматически удаляет дубликаты, оставляя только уникальные слова

    len() подсчитывает количество уникальных слов



Задание №4
Реализуйте программу, которая считает, сколько раз каждое число из заданного по умолчанию в тексте
программы (подобно константе) произвольного списка встречается в этом списке, используя словарь. Результаты выведите в формате: число — соответствующее количество.

def main():
    # Заданный по умолчанию список чисел
    numbers = [1, 2, 3, 2, 4, 1, 5, 2, 3, 1, 4, 4, 5]
    
    frequency = {}
    
    for num in numbers:
        if num in frequency:
            frequency[num] += 1
        else:
            frequency[num] = 1

    print("Число - Количество:")
    for num, count in sorted(frequency.items()):
        print(f"{num} — {count}")

if __name__ == "__main__":
    main()

Задание №5
Создайте произвольный список из чисел от -10 до 10 включительно. Реализуйте программу, которая создаёт
новый список, содержащий только числа, кратные 3, используя только генератор списков.

def main():

    numbers = list(range(-10, 11))
    
    multiples_of_3 = [x for x in numbers if x % 3 == 0]
    
    print(f"Исходный список: {numbers}")
    print(f"Числа, кратные 3: {multiples_of_3}")

if __name__ == "__main__":
    main()
